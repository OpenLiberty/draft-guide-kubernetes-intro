name: Test application

on:
  pull_request:
    branches: [master, qa]

jobs:
  get-files:
    if: ${{ github.event_name == 'pull_request' }}
    runs-on: ubuntu-latest
    outputs:
      files: ${{ steps.set-files.outputs.files }}
      canSkip: ${{ steps.set-files.outputs.canSkip }}
    steps:
      - id: set-files
        run: |
          URL="https://api.github.com/repos/${{ github.repository }}/pulls/${{ github.event.pull_request.number }}/files"
          FILES=$(curl -s -X GET -G $URL| jq -r '[ .[] |  .filename ]' | tr -d '\n')
          echo "::set-output name=files::$FILES"
          if [ ${#FILES[@]} == 1 ] && [ ${FILES[0]} == README.adoc ]; then
             echo "Test can be skipped because only README.adoc was updated"
             echo "::set-output name=canSkip::true"
           else
             echo "Need to run test"           
             echo "::set-output name=canSkip::false"
          fi
  checker:
    runs-on: ubuntu-latest
    needs: [get-files]
    strategy:
      matrix:
        files: ${{ fromJSON(needs.get-files.outputs.files) }}
    steps:
      - name: Get tools
        uses: actions/checkout@v2
        with:
          path: tools/
          repository: openliberty/guides-common
      - name: Get files
        uses: actions/checkout@v2
        with:
          path: files/
          ref: pr-checker
      - name: Checking file
        run: |
          python3 ./tools/.github/workflows/pr-checker/checker.py --deny ./tools/.github/workflows/pr-checker/deny_list.json\
            --warn ./tools/.github/workflows/pr-checker/warning_list.json ./files/${{ matrix.files }}
  java8build:
    runs-on: ubuntu-latest
    needs: [get-files]
    if: "!contains(needs.get-files.outputs.canSkip, 'true')"
    env:
      CHANGE_MINIKUBE_NONE_USER: true
    defaults:
      run:
        working-directory: finish
    steps:
      - uses: actions/checkout@v2
      - name: Set up JDK 8
        uses: actions/setup-java@v1
        with:
          java-version: 8
      - run: unset _JAVA_OPTIONS
      - name: Set up Minikube
        run: |
          curl -LO https://storage.googleapis.com/kubernetes-release/release/$(curl -s https://storage.googleapis.com/kubernetes-release/release/stable.txt)/bin/linux/amd64/kubectl
          chmod +x kubectl
          sudo ln -s $(pwd)/kubectl /usr/local/bin/kubectl
          wget https://github.com/kubernetes/minikube/releases/download/v0.28.2/minikube-linux-amd64 -q -O minikube
          chmod +x minikube
      - name: Install Conn Track
        run: |
          sudo apt-get update -y
          sudo apt-get install -y conntrack
      - name: Start Minikube
        run: sudo minikube start --vm-driver=none --bootstrapper=kubeadm
      - name: Run tests
        run: sudo ../scripts/travisTest.sh
      - name: Post tests
        if: always()
        run: sudo docker images